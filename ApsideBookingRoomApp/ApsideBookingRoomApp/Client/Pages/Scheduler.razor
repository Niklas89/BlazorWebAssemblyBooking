@page "/Scheduler"
@inject IBookingService BookingService


<TelerikScheduler Data="@BookingService.Bookings" @bind-Date="@StartDate" Height="600px" @bind-View="@CurrView"
                  TitleField="@(nameof(BookingDto.Subject))"
                  DescriptionField="@(nameof(BookingDto.Comment))"
                  StartField="@(nameof(BookingDto.StartDate))"
                  EndField="@(nameof(BookingDto.EndDate))"
                  IsAllDayField="@(nameof(BookingDto.IsAllDay))"
                  IdField="@(nameof(BookingDto.IdBooking))"
                  RecurrenceRuleField="@(nameof(BookingDto.RecurrenceRule))"
                  RecurrenceExceptionsField="@(nameof(BookingDto.RecurrenceExceptions))"
                  RecurrenceIdField="@(nameof(BookingDto.RecurrenceId))">
    <SchedulerViews>
        <SchedulerDayView StartTime="@DayStart" />
        <SchedulerWeekView StartTime="@DayStart" />
        <SchedulerMultiDayView StartTime="@DayStart" NumberOfDays="10" />
    </SchedulerViews>
</TelerikScheduler>

@code {
    public SchedulerView CurrView { get; set; } = SchedulerView.Week;
    public DateTime StartDate { get; set; } = new DateTime(2022, 06, 6);
    public DateTime DayStart { get; set; } = new DateTime(2000, 1, 1, 8, 0, 0); //the time portion is important

   /*
                
    List<SchedulerAppointment> Appointments = new List<SchedulerAppointment>()
    {
            new SchedulerAppointment
            {
                AppointmentTitle = "Board meeting",
                ApptDescription = "Q4 is coming to a close, review the details.",
                StartTime = new DateTime(2019, 12, 5, 10, 00, 0),
                EndTime = new DateTime(2019, 12, 5, 11, 30, 0)
            },

            new SchedulerAppointment
            {
                AppointmentTitle = "Vet visit",
                ApptDescription = "The cat needs vaccinations and her teeth checked.",
                StartTime = new DateTime(2019, 12, 2, 11, 30, 0),
                EndTime = new DateTime(2019, 12, 2, 12, 0, 0)
            },

            new SchedulerAppointment
            {
                AppointmentTitle = "Planning meeting",
                ApptDescription = "Kick off the new project.",
                StartTime = new DateTime(2019, 12, 6, 9, 30, 0),
                EndTime = new DateTime(2019, 12, 6, 12, 45, 0)
            },

            new SchedulerAppointment
            {
                AppointmentTitle = "Trip to Hawaii",
                ApptDescription = "An unforgettable holiday!",
                AllDayAppt = true,
                StartTime = new DateTime(2019, 11, 27),
                EndTime = new DateTime(2019, 12, 05)
            },

            new SchedulerAppointment
            {
                AppointmentTitle = "Morning run",
                ApptDescription = "Some time to clear the head and exercise.",
                StartTime = new DateTime(2019, 11, 27, 9, 0, 0),
                EndTime = new DateTime(2019, 11, 27, 9, 30, 0),
                RecurrenceString = "FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR"
            }
    };
    
    public class SchedulerAppointment
    {
        public Guid ID { get; set; }
        public string AppointmentTitle { get; set; }
        public string ApptDescription { get; set; }
        public DateTime StartTime { get; set; }
        public DateTime EndTime { get; set; }
        public bool AllDayAppt { get; set; }
        public string RecurrenceString { get; set; }
        public List<DateTime> RecurrenceApptExceptions { get; set; }
        public Guid? RecurrenceAppointmentId { get; set; }

        public SchedulerAppointment()
        {
            ID = Guid.NewGuid();
        }
        
    
    */
    protected override async Task OnInitializedAsync()
    {
       await BookingService.GetBookings();
    }
}